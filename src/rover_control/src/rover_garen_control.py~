#!/usr/bin/env python
# -*- coding: utf-8 -*-

import rospy
from std_msgs.msg import String
import serial
from geometry_msgs.msg import Twist
import math


twist = Twist()
ser = serial.Serial('/dev/ttyACM0',115200) 
t=0
def callback(msg):
    rospy.loginfo("Received a /cmd_vel message!")
    twist.linear.x = (msg.linear.x )
    twist.angular.z = (msg.angular.z)
    if twist.angular.z < 0:
            angular_way = "0"
            rover_angular_speed = -twist.angular.z
    else:
            angular_way = "1"
            rover_angular_speed = twist.angular.z
    rover_linear_speed=int(twist.linear.x*99/0.5)     
    if rover_linear_speed < 10:
            rover_linear_speed_str = "0" + str( rover_linear_speed)
    else:
            rover_linear_speed_str = str( rover_linear_speed)
    rover_angular_speed = int(rover_angular_speed*99)
    if rover_angular_speed  < 10:
            rover_angular_speed_str = "0" + str(rover_angular_speed )
    else:
            rover_angular_speed_str = str(rover_angular_speed )
    rover_cmd_vel = "B" + "1" + rover_linear_speed_str + angular_way + rover_angular_speed_str + "E"
    rospy.loginfo("B: [%s]  "%(rover_cmd_vel))
    ser.write(rover_cmd_vel)
    

   
    
 

def listener():
    rospy.init_node('cmd_vel_listener')
    rospy.Subscriber("/husky_velocity_controller/cmd_vel", Twist, callback)
    rospy.spin()


if __name__ == '__main__':
  try:
   
     listener()

  except rospy.ROSInterruptException:
    pass
